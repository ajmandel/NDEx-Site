<% include head.ejs %>
<% include nav.ejs %>

<script>
// On form submit, send the search expression to findNetworks
// with a limit of 100.
//TODO 
//DOM Elements depend on object JID for identification, consider using names instead.
//copy code to view group and view user

function doSearch(offset) {
	var limitInput = document.getElementById('searchCount');
	var limit = $(limitInput).val();

	if(!offset) { offset = $('#searchPage').val(); }

	if(!limit) { 
		$(limitInput).val(2);
		limit = 2;
	}
	if(!offset) { offset = 1; }
	
	$('#searchPage').val(offset);
	offset = offset - 1;

	var searchExpression = $('#searchExpression').val().toUpperCase();

	console.log("Calling findNetworks with '" + searchExpression + "' " + limit + " " + offset);
	
	ndexClient.findNetworks(searchExpression, limit, offset, function(data){
		console.log("Got results from findNetworks");
		console.log(data);
		for (i in data.networks){
			var network = data.networks[i];
			console.log(network.title);
		}
		
		// Clears the searchResults div
		$('#searchResults').html('');
		
		if (data.networks){
			$('#searchResults').append(tableHead());
			$.each(data.networks, function(index, item){
				$('#searchResults').append(formatNetworkDescriptor(item));
			}); 
 			
			$('#searchResults').append(createPaginationModule(data.blockAmount, offset));
  			$('#searchPage').attr('placeholder', 'max value: ' + data.blockAmount);
		}
    },
    // error handler
    function(error){
    	$('#searchResults').append(formatError(error));
    });
    
    return false;
}

function createPaginationModule(pageAmount, page) {

	var pagDiv = document.createElement('div');
	var pagUl = document.createElement('ul');
	
	var prevLi = document.createElement('li');
	var prev = document.createElement('a');
	var nextLi = document.createElement('li');
	var next = document.createElement('a');
	var firstLi = document.createElement('li');
	var first = document.createElement('a');
	var lastLi = document.createElement('li');
	var last = document.createElement('a');
	
	if(page == 0) $(prevLi).addClass('active');
	if(page == 0) $(firstLi).addClass('active');
	if(page == (pageAmount - 1)) $(nextLi).addClass('active');
	if(page == (pageAmount - 1)) $(lastLi).addClass('active');
	
	$(prev).attr('onclick','doSearch(Number(this.id))').attr('id', page).html('<');
	$(next).attr('onclick','doSearch(Number(this.id))').attr('id', page+2).html('>');
	$(first).attr('onclick','doSearch(1)').attr('rel','tooltip').attr('title', 'page 1').html('<<');
	$(last).attr('onclick','doSearch(Number(this.id))').attr('id', pageAmount).attr('rel','tooltip').attr('title', 'page ' + pageAmount).html('>>');
	
	$(firstLi).append(first);
	$(pagUl).append(firstLi);
	$(prevLi).addClass('prev').append(prev);
	$(pagUl).append(prevLi);
	$(nextLi).addClass('next').append(next);
	$(lastLi).append(last);
	
	for(var ii = 0; ii < pageAmount; ii++){
		if(ii < (page-2)) continue;
		if(ii > (page+2)) continue;
		var pagLi = document.createElement('li');
		var pagA = document.createElement('a');
		
		if(ii == page) { $(pagLi).addClass('active') };
		
		$(pagA).attr('onclick','doSearch(Number(this.innerHTML))').html( ii + 1);
		$(pagLi).append(pagA);
		$(pagUl).append(pagLi);
	}
	
	$(pagUl).append(nextLi);
	$(pagUl).append(lastLi);
	
	$(pagDiv).addClass('pagination pagination-centered').append(pagUl);
	return pagDiv;
}


function onWorkspace(jid){
	//check if network is on the user workspace. 
	//TODO will be replaced by api functions
	var tempLink = document.getElementById('link'+jid);
	//var tempBtn = document.getElementById('button'+jid);
	var tempIcon = document.getElementById('icon'+jid);
	var found = false;
	
	
	$("input").each(function(index,value){
		if($(this).attr('title') == jid) {
			$(tempLink).attr('onclick','removeFromWorkspace(this)');//
			$(tempIcon).attr('title','Remove from Workspace');
			tempIcon.className='icon-remove';
			found = true;
		}
	});
	
	if(found)return;
	
	$(tempLink).attr('onclick','addToWorkspace(this)');
	$(tempIcon).attr('title','Add to Workspace');
	tempIcon.className='icon-plus icon-white';
}

function removeFromWorkspace(obj){
	var parent = document.getElementById('workSurface');

	$("input").each(function(index,value){
		if($(this).attr('title') == $(obj).attr('title')){
			var child = document.getElementById('thumbnail' + $(this).attr('title'));
			parent.removeChild(child);
			onWorkspace($(obj).attr('title'));
		}
	});
	
}

function addToWorkspace(obj){
	var unlst = document.createElement('ul'),
		lst = document.createElement('li'),
		cnt = document.createElement('div'),
		formBox = document.createElement('form'),
		chckbox = document.createElement('input'),
		titleSpan = document.createElement('p');
	var parent = document.getElementById('workSurface');
		
	$(titleSpan).addClass('thumbText')
		.append($(obj).attr('title'));//
	$(chckbox).attr('id','checkbox' + $(obj).attr('title'))
		.attr('title',$(obj).attr('title'))
		.attr('type','checkbox');
	$(formBox).append(chckbox);
	$(cnt).addClass('thumbnail thumbIcon')
		.append(formBox)
		.append(titleSpan);
	$(lst).append(cnt);
	$(unlst).attr('id','thumbnail' + $(obj).attr('title'))
		.addClass('thumbnails')
		.append(lst);
	
	$(parent).append(unlst);
	onWorkspace($(obj).attr('title'));
}

function toggle(obj) {
	var divDisplay = obj.id +1;
	var ele = document.getElementById(divDisplay);
	var but = document.getElementById(obj.id +2);
	if(ele.style.display == "block") {
		ele.style.display = "none";
		but.className = 'icon-chevron-right';
	}
	else {
		ele.style.display = "block";
		but.className = 'icon-chevron-down';
	}
	
	onWorkspace($(obj).attr('title'));
}

//actions for network upon dropdown
function buttonTools(item){
	var buttonDiv = document.createElement('div'),
		wkSpaceLink=document.createElement('a'),
		viewLink=document.createElement('a'),
		visualizeLink=document.createElement('a'),
		wkSpaceIcon=document.createElement('i'),
		viewIcon=document.createElement('i'),
		visualizeIcon=document.createElement('i');
		
	$(wkSpaceIcon).addClass('icon-plus')
		.attr('id','icon'+item.jid)
		.attr('rel','tooltip')
		.attr('title','Add to Workspace')
		.attr('data-placement','bottom');
	$(viewIcon).addClass('icon-folder-open');
	$(visualizeIcon).addClass('icon-eye-open');
	

	
	$(wkSpaceLink).attr('onclick','')
		.attr('id','link'+item.jid)
		.attr('title',item.jid)
		.addClass('btn')
		.append(wkSpaceIcon);
	$(viewLink).attr('href','../viewNetwork/' + item.jid)
		.addClass('btn')
		.attr('rel','tooltip')
		.attr('title','View Network')
		.attr('data-placement','bottom')
		.append(viewIcon);
	$(visualizeLink).attr('href','../visualizeNetwork/' + item.jid)
		.addClass('btn')
		.attr('rel','tooltip')
		.attr('title','VisualizeNetwork')
		.attr('data-placement','bottom')
		.append(visualizeIcon);
		
	$(buttonDiv).addClass('btn-group')
		.append(wkSpaceLink)
		.append(viewLink)
		.append(visualizeLink);
		
	return buttonDiv
}

function tableHead(){
    var mainDiv = document.createElement('div'),
        mainTable = document.createElement('table'),
        mainTblBody = document.createElement('tbody'),
        mainRow = document.createElement('tr'),
        mainCell = document.createElement('th');

    $(mainCell).addClass('span9').html("Available Networks");

    $(mainRow).addClass('success').append(mainCell);
    $(mainTblBody).append(mainRow);
    $(mainTable).addClass('table').append(mainTblBody);
    $(mainDiv).append(mainTable);

    return mainDiv;

}

function formatNetworkDescriptor(item){
	var networkDIV = document.createElement('div'),
		nTable = document.createElement('table'),
        tblBody = document.createElement('tbody'),
        row = document.createElement('tr'),
		cell = document.createElement('td'),
		nodeSpan = document.createElement('span'),
		edgeSpan = document.createElement('span'),
		titleSpan = document.createElement('span'),
		iconSpan = document.createElement('span'),
		divButton = document.createElement('i'),
		networkLink = document.createElement('a'),
		buttonLink = document.createElement('a'),
		infoDiv = document.createElement('div');

	$(divButton).attr('rel','tooltip')
			.attr('title','More Info')
			.attr('id',item.title + 2)
			.addClass('icon-chevron-right');

	$(infoDiv).addClass('searchInfo').attr('id',item.title + 1)
					.attr('style','display: none')
					.append(buttonTools(item));	

	$(buttonLink).attr('id',item.title)
			.attr('title',item.jid)
			.attr('onClick', 'toggle(this)')
			.append(divButton);

	  
	$(networkLink).attr('href','viewNetwork/' + item.jid).append(item.title);
	$(nodeSpan).addClass('span2 elementCount').append(item.nodeCount + " nodes"); 
	$(edgeSpan).addClass('span2 elementCount').append(item.edgeCount + " edges"); 
	$(titleSpan).addClass('span4 networkTitle').append(networkLink); 
	$(iconSpan).addClass('span1').append(buttonLink);   
	
        
    var li = document.createElement('li');
    var ul = document.createElement('ul');
    var a = document.createElement('a');
        
    $(networkDIV).addClass('row-fluid').append(iconSpan).append(titleSpan).append(nodeSpan).append(edgeSpan);
    $(a).attr('style','color:black').append(networkDIV).append(infoDiv);
        
    $(li).append(a);
    $(ul).addClass("nav nav-list").append(li);

	return ul;//networkDIV;

}

function formatError(error){

}

</script>
<!-- btn-group from twitter allows for next div to be aligned and pulled right, easy fix-->
<div class="btn-group">
	<form onsubmit="return doSearch();" id="searchForm">
		<div>
		<label>Query:</label>
		<input type="text" name="searchExpression" id="searchExpression"/><br/>
		</div>

		<div>
		<input type="submit" value="Search"/>
		</div>
	</form>
</div>
<div class = "pull-right">
	<a class = "ndex-options" href = "#searchOptions" data-toggle="modal"> 
		<i class="icon-cog icon-large"></i> 
	</a>
</div>

<div id="searchResults">

</div>

<div id = "searchOptions" class = " modal hide fade" tabindex = "-1" role = "dialog" aria-labelledby = "myModalLabel" aria-hidden = "true">
	<div class = "modal-header">
		<h4 id = "myModalLabel"> Network Search Options </h4>
	</div>
	<div class="modal-body">
		
		<label class = "span2">Search results per page: </label>
		<input id = "searchCount" type = "text" class = "span2" pattern = "" min = "1"> <br>
		<label class = "span2">Current page: </label>
		<input id = "searchPage" type = "text" class = "span2" pattern = "" min = "1" placeholder = "0"> <br>
		
	</div>
	<div class = "modal-footer">
		<button class = "btn" onclick = "doSearch()" data-dismiss = "modal" aria-hidden = "true"> Save Changes </button>
		<button class = "btn" data-dismiss = "modal" aria-hidden = "true"> Cancel </button>
	</div>
</div>

<% include sidebar.ejs %>
<% include foot.ejs %>
