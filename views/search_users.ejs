<% include head.ejs %>
<% include nav.ejs %>

<!--<div data-spy="affix" data-offset-top="200">
	<div>	
		<p>testing</p>
	</div>
</div>

<div>next</div>


<p>TODO Search Results</p>
</html>-->

    <!-- Button to trigger modal -->

<!-- Page used to sample html that does not have an implementaion or home -->

<!--create a group -->
<div class=''>
	<h3>Create a Group</h3>
	<hr>
	<form  class="form-horizontal" action="http://localhost:3333/groups" method="POST" enctype="multiipart/form-data">
		<div class="control-group">
				<label class="control-label" for="inputGroupName">Group Name</label>
				<div class="controls">
					<input  type="text" id="inputGroupName" name="groupName"></div></div>
		<div class="control-group">
				<label class="control-label" for="inputuserid">User Id (temporary)</label>
				<div class="controls">
					<input  type="text" id="inputuserid" name="userid"></div></div>
		<div class="control-group">
				<label class="control-label" for="inputWebsite">Associated Website</label>
				<div class="controls">
					<input  type="text" id="inputWebsite" name="website"></div></div>
		<div class="control-group">
				<label class="control-label" for="inputDescription">Description</label>
				<div class="controls">
					<textarea rows="3" id="inputDescription" name="description" placeholder="A brief description of your group (i.e., mission statement, purpose, etc.)"></textarea></div></div>
		<div class="control-group">
				<label class="control-label" for="inputForegroundImg">Profile Picture</label>
				<div class="controls">
					<input  type="file" id="inputForegroundImg" name="foregroundImg"></div></div>
		<div class="control-group">
				<label class="control-label" for="inputBackgroundImg">Cover Photo</label>
				<div class="controls">
					<input  type="file" id="inputBackgroundImg" name="backgroundImg"></div></div>
		<hr>
		<input type="submit" value="Submit">
	</form>
	
</div>


<!----------------------------------------------------------------------------------------------------->
<!------------------------------------- All in One Request -------------------------------------------->

<!--form-->

<div class="well" id="allRequest" style="display:none" >
	<h3>Make a Request</h3>
	<hr>
	<form  class="form-horizontal" action="" method="post" enctype="multiipart/form-data" id="requestForm">
		<div class="control-group">
			<label class="control-label" for="inputFrom">From</label>
			<div class="controls">
				<select name="from" id="from">
					<option value=""></option>
						</select></div></div>
		<div class="control-group" style="display:none" id = "toDiv" >
			<label class="control-label" for="toType">To</label>
			<div class="controls">
				<select name="toType" id="toType">
					<option value=""></option>
						</select></div></div>
		<div class="control-group" style="display:none" id = "toWhom" >
			<label class="control-label" for="spanWhom" id = "labelWhom">Selected </label>
			<div class="controls">
				<label id="spanWhom" class = "requestFormat"> </label>
				<input  type="hidden" id="inputWhom" name="target" value=""></div></div>
		<div class="control-group" style="display:none" id = "typeDiv" >
			<label class="control-label" for="spanType" id = "labelType"> Type </label>
			<div class="controls">
				<label id="spanType" class = "requestFormat"></label>
				<input  type="hidden" id="inputType" name="type" value=""></div></div>
		<div class="control-group" style="display:none" id = "permissionsDiv" >
			<label class="control-label" for="permissions"> Permissions </label>
			<div class="controls">
				<select name="permissions" id = "permissions">
					<option value="">test2</option>
						</select></div></div>
		<hr>
		<input type="submit" value="Submit">
	</form>
</div>

<!--modals-->
<div id = "searchNetworks" class = " modal hide fade" tabindex = "-1" role = "dialog" aria-labelledby = "myModalLabel" aria-hidden = "true">
	<div class = "modal-header">
		<h4 id = "myModalLabel"> Search Networks </h4>
	</div>
	<div class="modal-body">
		<form onsubmit="return doNetworkSearch();" id="networkSearchForm">
			<div>
				<label>Query:</label>
				<input type="text" name="networkSearchExpression" id="networkSearchExpression"/><br/>
			</div>
			<div>
				<input type="submit" value="Search"/>
			</div>
		</form>
		<div id="networkSearchResults">
		</div>
	</div>
	<div class = "modal-footer">
		<button class = "btn" onclick = "populateRemaining('networkSearchResults')" data-dismiss = "modal" aria-hidden = "true"> Select Network </button>
		<button class = "btn" onclick = "clearResults()" data-dismiss = "modal" aria-hidden = "true"> Cancel </button>
	</div>
</div>

<div id = "searchGroups" class = " modal hide fade" tabindex = "-1" role = "dialog" aria-labelledby = "myModalLabel" aria-hidden = "true">
	<div class = "modal-header">
		<h4 id = "myModalLabel"> Search Groups </h4>
	</div>
	<div class="modal-body">
		<form onsubmit="return doGroupSearch();" id="groupSearchForm">
			<div>
				<label>Query:</label>
				<input type="text" name="groupSearchExpression" id="groupSearchExpression"/><br/>
			</div>
			<div>
				<input type="submit" value="Search"/>
			</div>
		</form>
		<div id="groupSearchResults">
		</div>
	</div>
	<div class = "modal-footer">
		<button class = "btn" onclick = "populateRemaining('groupSearchResults')" data-dismiss = "modal" aria-hidden = "true"> Select Group </button>
		<button class = "btn" onclick = "clearResults()" data-dismiss = "modal" aria-hidden = "true"> Cancel </button>
	</div>
</div>

<div id = "searchUsers" class = " modal hide fade" tabindex = "-1" role = "dialog" aria-labelledby = "myModalLabel" aria-hidden = "true">
	<div class = "modal-header">
		<h4 id = "myModalLabel"> Search Users </h4>
	</div>
	<div class="modal-body">
		<form onsubmit="return doUserSearch();" id="userSearchForm">
			<div>
				<label>Query:</label>
				<input type="text" name="userSearchExpression" id="userSearchExpression"/><br/>
			</div>
			<div>
				<input type="submit" value="Search"/>
			</div>
		</form>
		<div id="userSearchResults">
		</div>
	</div>
	<div class = "modal-footer">
		<button class = "btn" onclick = "populateRemaining('userSearchResults')" data-dismiss = "modal" aria-hidden = "true"> Select User </button>
		<button class = "btn" onclick = "clearResults()" data-dismiss = "modal" aria-hidden = "true"> Cancel </button>
	</div>
</div>

<script>


//should get JID from server/ logged in user
var userId =  localStorage['ndexJid'] ;

function populateFrom(userObject){
	//show username, owned networks, and owned groups
	var selectFrom = document.getElementById('from');
	var userOption = document.createElement('option');
	
	$(userOption).data('type',{type : 'user'})
		.attr('value', userObject.jid)
		.attr('onclick','populateTo(this)')
		.html(userObject.username); // values sent in request will be JIDs
	$(selectFrom).append(userOption);
	
	$.each(userObject.ownedNetworks, function(index, network) {
		var networkOption = document.createElement('option');
		
		$(networkOption).data('type',{type : 'network'})
			.attr('value', network.jid)
			.attr('onclick','populateTo(this)')
			.html(network.title);
		$(selectFrom).append(networkOption);
	});
	
	$.each(userObject.ownedGroups, function(index, group) {
		var groupOption = document.createElement('option');
		
		$(groupOption).data('type',{type : 'group'})
			.attr('value', group.jid)
			.attr('onclick','populateTo(this)')
			.html(group.organizationName);
		$(selectFrom).append(groupOption);
	});
}

function populateTo(parent){
	//show possible request reciever types, group, network, or user

	//reset for a new To selection list and populate
	$('#toDiv').attr('style','display:block');
	$('#toWhom').attr('style','display:none');
	$('#typeDiv').attr('style','display:none');
	$('#permissionsDiv').attr('style','display:none');
	$('#toType').empty();
	//clear search results
	clearResults();
	
	var type = $(parent).data('type').type;
	var option = document.createElement('option');

	$('#toType').append(option);
	if ( type == 'user') {
		var networkOption = document.createElement('option'),
			groupOption = document.createElement('option');
		$(networkOption).attr('data-target','#searchNetworks')
			.attr('data-toggle', 'modal')
			.attr('value','usernetwork')
			.html('Network');
		$(groupOption).attr('data-target','#searchGroups')
			.attr('data-toggle', 'modal')
			.attr('value','usergroup')
			.html('Group');
		$('#toType').append(networkOption).append(groupOption);
	}
	if ( type == 'network') {
		var userOption = document.createElement('option'),
			groupOption = document.createElement('option');
		$(userOption).attr('data-target','#searchUsers')
			.attr('data-toggle', 'modal')
			.attr('value','networkuser')
			.html('User');
		$(groupOption).attr('data-target','#searchGroups')
			.attr('data-toggle', 'modal')
			.attr('value','networkgroup')
			.html('Group');
		$('#toType').append(userOption).append(groupOption);
	}
	if ( type == 'group') {
		var networkOption = document.createElement('option'),
			userOption = document.createElement('option');
		$(networkOption).attr('data-target','#searchNetworks')
			.attr('data-toggle', 'modal')
			.attr('value','groupnetwork')
			.html('Network');
		$(userOption).attr('data-target','#searchUsers')
			.attr('data-toggle', 'modal')
			.attr('value','groupuser')
			.html('User');
		$('#toType').append(networkOption).append(userOption);
	}
}

function populateRemaining(results){
	$('#spanWhom').html(''); 

	var selectedItem = document.getElementById(results),
		toObject = {},
		//used for something similar to implicit iteration
		requestTypes = {networkgroup : 'Invitation to Access', 
				networkuser: 'Invitation to Access', 
				groupnetwork: 'Request Access', 
				groupuser : 'Invite to Group', 
				usergroup : 'Request Membership', 
				usernetwork : 'Request Access'};

	//find the selected item in the results list
	$(selectedItem).find('input').each(function(index, item) {
		if($(this).is(':checked')){
			toObject = $(this).data('item');
			return false;
		}
	});
	//display to who the request is targeted to and set value of hidden input form for submission
	$('#toWhom').attr('style','display:block'); 
	$('#spanWhom').html(toObject.name); 
	$('#inputWhom').attr('value', toObject.jid);
	
	//display request type and set value of hidden input form for submission
	var request= requestTypes[$('#toType').val()];
	$('#typeDiv').attr('style','display:block');
	$('#spanType').html(request);
	$('#inputType').attr('value',request); //may have to make request types objects within objects to tailor to inputType, server type might be different
	
	//display permissions
	$('#permissionsDiv').attr('style','display:block');
	$('#permissions').empty();
	var option = document.createElement('option');
		reqType = $('#toType').val();
	
	$('#permissions').append(option);
	if((reqType == 'networkgroup') || (reqType == 'networkuser') || (reqType == 'usernetwork') || (reqType == 'groupnetwork')){
		var viewOption = document.createElement('option'),
			viewModifyOption = document.createElement('option'),
			ownModifyOption = document.createElement('option');

		$(viewOption).attr('value', 'view').html('View');
		$(viewModifyOption).attr('value', 'viewModify').html('View and Modify');
		$(ownModifyOption).attr('value', 'ownModify').html('Own and Modify');

		$('#permissions').append(viewOption).append(viewModifyOption).append(ownModifyOption);
	}	
	if((reqType == 'groupuser') || (reqType == 'usergroup')){
		var viewModifyOption = document.createElement('option'),
			ownModifyOption = document.createElement('option');

		$(viewModifyOption).attr('value', 'viewModify').html('View and Modify');
		$(ownModifyOption).attr('value', 'ownModify').html('Own and Modify');

		$('#permissions').append(viewModifyOption).append(ownModifyOption);
	}
	
}

function formatItem(item){
	//expects {name : '', jid : '', extraInfo : ''}
	var itemDiv = document.createElement('div'),
		checkboxSpan = document.createElement('span'),
		nameSpan = document.createElement('span'),
		extraSpan = document.createElement('span'),
		checkbox = document.createElement('input');

	$(checkbox).data('item',{jid : item.jid, name: item.name}).attr('type','radio').attr('name', 'rad');
	$(checkboxSpan).addClass('span1').append(checkbox);
	$(nameSpan).addClass('span6').append(item.name);
	$(extraSpan).addClass('span3').append(item.extraInfo);

	$(itemDiv).addClass('row-fluid').append(checkboxSpan).append(nameSpan).append(extraSpan);
	return itemDiv;
}

function clearResults() {
	$('#userSearchResults').html('');
	$('#networkSearchResults').html('');
	$('#groupSearchResults').html('');
}

function doNetworkSearch(){;
	//may want to include pagination
	var searchExpression = $('#networkSearchExpression').val().toUpperCase(),
		limit = 10,
		offset = 0;
	ndexClient.findNetworks(searchExpression, limit, offset, function(data){
		$('#networkSearchResults').html('');
		
		if (data.networks){
			$.each(data.networks, function(index, network){
				//process
				var item = {name : network.title, jid : network.jid, extraInfo : ''};
				$('#networkSearchResults').append(formatItem(item));
			}); 
		}
	},
	function(error){}
	);
	return false;
}

function doUserSearch(){
	var searchExpression = $('#userSearchExpression').val().toUpperCase(),
		limit = 10,
		offset = 0;
	ndexClient.findUsers(searchExpression, limit, offset, function(data){
		$('#userSearchResults').html('');
		
		if (data.users){
			$.each(data.users, function(index, user){
				//process
				var item = {name : user.username, jid : user.jid, extraInfo : ''};
				$('#userSearchResults').append(formatItem(item));
			}); 
		}
		// $('#userSearchResults').append(JSON.stringify(data));
	},
	function(error){ $('#userSearchResults').append(JSON.stringify(error));}
	);
	
	return false;
}

function doGroupSearch(){
	var searchExpression = $('#groupSearchExpression').val().toUpperCase(),
		limit = 10,
		offset = 0;
	ndexClient.findGroups(searchExpression, limit, offset, function(data){
		$('#groupSearchResults').html('');
		
		if (data.groups){
			$.each(data.groups, function(index, group){
				//process
				var item = {name : group.organizationName, jid : group.jid, extraInfo : ''};
				$('#groupSearchResults').append(formatItem(item));
			}); 
		}
		//$('#groupSearchResults').append(JSON.stringify(data));
	},
	function(error){ $('#groupSearchResults').append(JSON.stringify(error)); }
	);
	return false;
}

function isSignedIn() {
	if(localStorage['ndexUsername'] == '') {
		console.log('not signed in');
		return false;
	} else {
		console.log('signed in');
		return true;
	}
}


if(isSignedIn()){
	$('#allRequest').attr('style','display:block');
}

$(ndexClient.getUser(userId, function(data){
		var user = data.user;
		user.jid = userId;
		populateFrom(user);
		//$('#allRequest').append('test3');
	},
	function formatError(error){$('#allRequest').append('An error has occured');}
	)
);


</script>


<!------------------------------------------------------------------------------------------------------>



<!-------------------------------------------------------------------->
<!------------------Actual Search Users Code------------------------->
<!-------------------------------------------------------------------->

<hr>
<hr>

<div class="btn-group">
	<form onsubmit="return doSearch();" id="searchForm">
		<div>
		<label>Query:</label>
		<input type="text" name="searchExpression" id="searchExpression"/><br/>
		</div>

		<div>
		<input type="submit" value="Search"/>
		</div>
	</form>
</div>
<div class = "pull-right">
	<a class = "ndex-options" href = "#searchOptions" data-toggle="modal"> 
		<i class="icon-cog icon-large"></i> 
	</a>
</div>

<div id="searchResults">

</div>

<div id = "searchOptions" class = " modal hide fade" tabindex = "-1" role = "dialog" aria-labelledby = "myModalLabel" aria-hidden = "true">
	<div class = "modal-header">
		<h4 id = "myModalLabel"> Group Search Options </h4>
	</div>
	<div class="modal-body">
		
		<label class = "span2">Search results per page: </label>
		<input id = "searchCount" type = "text" class = "span2" pattern = "" min = "1"> <br>
		<label class = "span2">Current page: </label>
		<input id = "searchPage" type = "text" class = "span2" pattern = "" min = "1" placeholder = "0"> <br>
		
	</div>
	<div class = "modal-footer">
		<button class = "btn" onclick = "doSearch()" data-dismiss = "modal" aria-hidden = "true"> Save Changes </button>
		<button class = "btn" data-dismiss = "modal" aria-hidden = "true"> Cancel </button>
	</div>
</div>

<script>



function doSearch(offset) {
	var limitInput = document.getElementById('searchCount');
	var limit = $(limitInput).val();

	if(!offset) { offset = $('#searchPage').val(); }

	if(!limit) { 
		$(limitInput).val(2);
		limit = 2;
	}
	if(!offset) { offset = 1; }
	
	$('#searchPage').val(offset);
	offset = offset - 1;

	var searchExpression = $('#searchExpression').val().toUpperCase();
	
	ndexClient.findUsers(searchExpression, limit, offset, function(data){
		$('#searchResults').html('');

		if (data.users){
			$('#searchResults').append(tableHead());
			$.each(data.users, function(index, item){
				$('#searchResults').append(formatUserDescriptor(item));
			}); 
 			
			$('#searchResults').append(createPaginationModule('2', offset));
  			//$('#searchPage').attr('placeholder', 'max value: ' + data.blockAmount);
		}
    },
    // error handler
    function(error){
    	$('#searchResults').append();
    });
    
    return false;
}

function createPaginationModule(pageAmount, page) {

	var pagDiv = document.createElement('div');
	var pagUl = document.createElement('ul');
	
	var prevLi = document.createElement('li');
	var prev = document.createElement('a');
	var nextLi = document.createElement('li');
	var next = document.createElement('a');
	var firstLi = document.createElement('li');
	var first = document.createElement('a');
	var lastLi = document.createElement('li');
	var last = document.createElement('a');
	
	if(page == 0) $(prevLi).addClass('active');
	if(page == 0) $(firstLi).addClass('active');
	if(page == (pageAmount - 1)) $(nextLi).addClass('active');
	if(page == (pageAmount - 1)) $(lastLi).addClass('active');
	
	$(prev).attr('onclick','doSearch(Number(this.id))').attr('id', page).html('<');
	$(next).attr('onclick','doSearch(Number(this.id))').attr('id', page+2).html('>');
	$(first).attr('onclick','doSearch(1)').attr('rel','tooltip').attr('title', 'page 1').html('<<');
	$(last).attr('onclick','doSearch(Number(this.id))').attr('id', pageAmount).attr('rel','tooltip').attr('title', 'page ' + pageAmount).html('>>');
	
	$(firstLi).append(first);
	$(pagUl).append(firstLi);
	$(prevLi).addClass('prev').append(prev);
	$(pagUl).append(prevLi);
	$(nextLi).addClass('next').append(next);
	$(lastLi).append(last);
	
	for(var ii = 0; ii < pageAmount; ii++){
		if(ii < (page-2)) continue;
		if(ii > (page+2)) continue;
		var pagLi = document.createElement('li');
		var pagA = document.createElement('a');
		
		if(ii == page) { $(pagLi).addClass('active') };
		
		$(pagA).attr('onclick','doSearch(Number(this.innerHTML))').html( ii + 1);
		$(pagLi).append(pagA);
		$(pagUl).append(pagLi);
	}
	
	$(pagUl).append(nextLi);
	$(pagUl).append(lastLi);
	
	$(pagDiv).addClass('pagination pagination-centered').append(pagUl);
	return pagDiv;
}

function toggle(obj) {
	var jid = $(obj).data('toggle').jid;
	var ele = document.getElementById('info' + jid);
	var but = document.getElementById('icon' + jid);
	if(ele.style.display == "block") {
		ele.style.display = "none";
		but.className = 'icon-chevron-right';
	}
	else {
		ele.style.display = "block";
		but.className = 'icon-chevron-down';
	}
	
}

function buttonTools(item){
	var buttonDiv = document.createElement('div'),
		viewLink=document.createElement('a'),
		viewIcon=document.createElement('i'),
		shareNetworkLink = document.createElement('a'),
		shareNetworkIcon = document.createElement('i'),
		inviteGroupLink = document.createElement('a'),
		inviteGroupIcon = document.createElement('i');
		
	
	$(viewIcon).addClass('icon-folder-open');
	$(shareNetworkIcon).addClass('icon-share');
	$(inviteGroupIcon).addClass('icon-exchange');
	

	
	$(viewLink).attr('href','../viewUser/' + item.jid)
		.addClass('btn')
		.attr('rel','tooltip')
		.attr('title','View Group')
		.attr('data-placement','bottom')
		.append(viewIcon);
	
	$(shareNetworkLink).attr('href','#')
		.addClass('btn')
		.attr('rel', 'tooltip')
		.attr('title', 'Share a Network with this User')
		.attr('data-placement', 'bottom')
		.append(shareNetworkIcon);
	$(inviteGroupLink).attr('href', '#')
		.addClass('btn')
		.attr('rel', 'tooltip')
		.attr('title', 'Invite User to a Group')
		.attr('data-placement', 'bottom')
		.append(inviteGroupIcon);
		
	if (isSignedIn() && (user.username != item.username)) {
		$(buttonDiv).append(shareNetworkLink).append(inviteGroupLink);
	}
		
	$(buttonDiv).addClass('btn-group')
		.append(viewLink);
	return buttonDiv
}


function tableHead(){
    var mainDiv = document.createElement('div'),
        mainTable = document.createElement('table'),
        mainTblBody = document.createElement('tbody'),
        mainRow = document.createElement('tr'),
        mainCell = document.createElement('th');

    $(mainCell).addClass('span9').html("Available Users");

    $(mainRow).addClass('success').append(mainCell);
    $(mainTblBody).append(mainRow);
    $(mainTable).addClass('table').append(mainTblBody);
    $(mainDiv).append(mainTable);

    return mainDiv;

}

function formatUserDescriptor(item){
	var userDIV = document.createElement('div'),
		titleSpan = document.createElement('span'),
		iconSpan = document.createElement('span'),
		divButton = document.createElement('i'),
		userLink = document.createElement('a'),
		buttonLink = document.createElement('a'),
		infoDiv = document.createElement('div');

	$(divButton).attr('rel','tooltip')
		.attr('title','More Info')
		.attr('id', 'icon' + item.jid)
		.addClass('icon-chevron-right');

	$(infoDiv).attr('id', 'info' + item.jid)
		.attr('style','display: none')
		.append(buttonTools(item));	

	$(buttonLink).data('toggle', {jid : item.jid} )
		.attr('onClick', 'toggle(this)')
		.append(divButton);

	  
	$(userLink).attr('href','viewUser/' + item.jid).append(item.username);
	$(titleSpan).addClass('span4 networkTitle').append(userLink); 
	$(iconSpan).addClass('span1').append(buttonLink);   
	
        
    var li = document.createElement('li');
    var ul = document.createElement('ul');
    var a = document.createElement('a');
        
    $(userDIV).addClass('row-fluid').append(iconSpan).append(titleSpan);
    $(a).attr('style','color:black').append(userDIV).append(infoDiv);
        
    $(li).append(a);
    $(ul).addClass("nav nav-list").append(li);

	return ul;

}


</script>

<% include foot.ejs%>
